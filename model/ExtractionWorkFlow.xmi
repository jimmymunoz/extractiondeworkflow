<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <packagedElement xmi:type="uml:Activity" name="Main.main(String[],WindowEvent):void">
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/getClassList(CompilationUnit%20parse):List%3CTypeDeclaration%3E //Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E/init-ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E">
      <body>ActivityDiagramParser.getClassList(CompilationUnit):List&lt;TypeDeclaration></body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/validateClassDiagram():boolean //Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/init-ActivityDiagramAst.validateClassDiagram():boolean">
      <body>ActivityDiagramAst.validateClassDiagram():boolean</body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/activityDiagram.testClassDiagram():void //Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/init-ActivityDiagramAst.testClassDiagram():void">
      <body>ActivityDiagramAst.testClassDiagram():void</body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/adParser.parseActivityDiagram():ActivityDiagramAst //Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/init-ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst">
      <body>ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst</body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.getResponseInstructions():String //Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseInstructions():String/init-ActivityDiagramAst.getResponseInstructions():String">
      <body>ActivityDiagramAst.getResponseInstructions():String</body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/setResponseInstructions(String%20getResponseInstructions()%20+%20activityDiagramModel.getResultModel()):void">
      <body>Main.setResponseInstructions(String):void</body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/setResponseInstructions(String%20getResponseInstructions()%20+%20Ptrans.getResultTransformation()):void">
      <body>Main.setResponseInstructions(String):void</body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/getResponseInstructions():String.1">
      <body>Main.getResponseInstructions():String</body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/Ptrans.getResultTransformation():String.1">
      <body>PapyrusTransformation.getResultTransformation():String</body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.getResponseValidate():String //Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseValidate():String/init-ActivityDiagramAst.getResponseValidate():String">
      <body>ActivityDiagramAst.getResponseValidate():String</body>
    </ownedComment>
    <ownedComment annotatedElement="//Main.main(String%5B%5D,WindowEvent):void/initDiagram():String //Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.getResponseInstructions():String">
      <body>Main.initDiagram():String</body>
    </ownedComment>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/configurationList.put(String%20%22create_subactivities%22,String%20%221%22):String" source="//Main.main(String%5B%5D,WindowEvent):void/init-Main.main(String%5B%5D,WindowEvent):void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/configurationList.put(String%20%22show_flot_variables%22,String%20%221%22):String" source="//Main.main(String%5B%5D,WindowEvent):void/configurationList.put(String%20%22create_subactivities%22,String%20%221%22):String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/setEnviromenTestMac():void" source="//Main.main(String%5B%5D,WindowEvent):void/configurationList.put(String%20%22show_flot_variables%22,String%20%221%22):String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/getCompilationUnitByDir():CompilationUnit" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/init-ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E/parse.accept(TypeDeclarationVisitor%20visitor):" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E/init-ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E/visitor.getListTypeDeclaration():List%3CTypeDeclaration%3E" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E/parse.accept(TypeDeclarationVisitor%20visitor):"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E/final-ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.getClassList(CompilationUnit):List%3CTypeDeclaration%3E/visitor.getListTypeDeclaration():List%3CTypeDeclaration%3E"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/getClassList(CompilationUnit%20parse):List%3CTypeDeclaration%3E" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/getCompilationUnitByDir():CompilationUnit"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/getListInvocationMethods(CompilationUnit%20parse):HashMap%3CString,ADMethodInvocation%3E" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/getClassList(CompilationUnit%20parse):List%3CTypeDeclaration%3E"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/getHashConditions(CompilationUnit%20parse):Map%3CString,Map%3CInteger,ADCondition%3E%3E" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/getListInvocationMethods(CompilationUnit%20parse):HashMap%3CString,ADMethodInvocation%3E"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/entryValidated" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/init-ActivityDiagramAst.validateClassDiagram():boolean"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/System.out.println(String%20%22Activity%20Diagram%20Validated%22):void" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/entryValidated"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/responseValidate.append(String%20%22Activity%20Diagram%20Validated%22%20+%20%22%5Cn%22):StringBuilder" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/System.out.println(String%20%22Activity%20Diagram%20Validated%22):void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/System.out.println(String%20%22Sorry,%20Entry%20point%20(%22%20+%20entryClass%20+%20%22:%22+%20entryMethod+%20%22()%22+%20%22)%20%20not%20found!%22):void" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/entryValidated"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/responseValidate.append(String%20%22Sorry,%20Entry%20point%20(%22%20+%20entryClass%20+%20%22:%22+%20entryMethod+%20%22()%22+%20%22)%20%20not%20found!%22):StringBuilder" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/System.out.println(String%20%22Sorry,%20Entry%20point%20(%22%20+%20entryClass%20+%20%22:%22+%20entryMethod+%20%22()%22+%20%22)%20%20not%20found!%22):void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/mergeNode%20(entryValidated)" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/responseValidate.append(String%20%22Activity%20Diagram%20Validated%22%20+%20%22%5Cn%22):StringBuilder"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/mergeNode%20(entryValidated)" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/responseValidate.append(String%20%22Sorry,%20Entry%20point%20(%22%20+%20entryClass%20+%20%22:%22+%20entryMethod+%20%22()%22+%20%22)%20%20not%20found!%22):StringBuilder"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/final-ActivityDiagramAst.validateClassDiagram():boolean" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.validateClassDiagram():boolean/mergeNode%20(entryValidated)"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/validateClassDiagram():boolean" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/init-ActivityDiagramAst.testClassDiagram():void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/entryValidated" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/validateClassDiagram():boolean"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/printToHashInstructions():void" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/entryValidated"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/mergeNode%20(entryValidated)" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/printToHashInstructions():void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/mergeNode%20(entryValidated)" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/entryValidated"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/final-ActivityDiagramAst.testClassDiagram():void" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.testClassDiagram():void/mergeNode%20(entryValidated)"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/activityDiagram.testClassDiagram():void" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/getHashConditions(CompilationUnit%20parse):Map%3CString,Map%3CInteger,ADCondition%3E%3E"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/final-ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst/activityDiagram.testClassDiagram():void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/adParser.parseActivityDiagram():ActivityDiagramAst" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/init-Main.initDiagram():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/setResponseInstructions(String%20activityDiagram.getResponseInstructions()):void" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/adParser.parseActivityDiagram():ActivityDiagramAst"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseInstructions():String/this.responseInstructions.toString():String" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseInstructions():String/init-ActivityDiagramAst.getResponseInstructions():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseInstructions():String/final-ActivityDiagramAst.getResponseInstructions():String" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseInstructions():String/this.responseInstructions.toString():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.getResponseInstructions():String" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/setResponseInstructions(String%20activityDiagram.getResponseInstructions()):void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.isEntryValidated()" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.getResponseInstructions():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.isEntryValidated():boolean" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.isEntryValidated()"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/setResponseInstructions(String%20getResponseInstructions()%20+%20activityDiagramModel.getResultModel()):void" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.isEntryValidated():boolean"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagramModel.getResultModel():String" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/getResponseInstructions():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagramModel.getFileModelPathSave():String" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagramModel.getResultModel():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/setResponseInstructions(String%20getResponseInstructions()%20+%20Ptrans.getResultTransformation()):void" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagramModel.getFileModelPathSave():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/Ptrans.getResultTransformation():String.1" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/Ptrans.getResultTransformation():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseValidate():String/responseValidate.toString():String" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseValidate():String/init-ActivityDiagramAst.getResponseValidate():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseValidate():String/final-ActivityDiagramAst.getResponseValidate():String" source="//Main.main(String%5B%5D,WindowEvent):void/ActivityDiagramAst.getResponseValidate():String/responseValidate.toString():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.getResponseValidate():String" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.isEntryValidated()"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/mergeNode%20(activityDiagram.isEntryValidated())" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/activityDiagram.getResponseValidate():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/final-Main.initDiagram():String" source="//Main.main(String%5B%5D,WindowEvent):void/Main.initDiagram():String/mergeNode%20(activityDiagram.isEntryValidated())"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/initDiagram():String" source="//Main.main(String%5B%5D,WindowEvent):void/setEnviromenTestMac():void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/System.exit(int%200):void" source="//Main.main(String%5B%5D,WindowEvent):void/initDiagram():String"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/frame.addWindowListener(%20new%20WindowAdapter()%7B%0A%20%20public%20void%20windowClosing(%20%20WindowEvent%20e)%7B%0A%20%20%20%20System.exit(0);%0A%20%20%7D%0A%7D%0A):void" source="//Main.main(String%5B%5D,WindowEvent):void/System.exit(int%200):void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/System.exit(int%200):void.1" source="//Main.main(String%5B%5D,WindowEvent):void/frame.addWindowListener(%20new%20WindowAdapter()%7B%0A%20%20public%20void%20windowClosing(%20%20WindowEvent%20e)%7B%0A%20%20%20%20System.exit(0);%0A%20%20%7D%0A%7D%0A):void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/frame.getContentPane():Container" source="//Main.main(String%5B%5D,WindowEvent):void/System.exit(int%200):void.1"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/frame.setSize(Dimension%20panel.getPreferredSize()):void" source="//Main.main(String%5B%5D,WindowEvent):void/frame.getContentPane():Container"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/panel.getPreferredSize():Dimension" source="//Main.main(String%5B%5D,WindowEvent):void/frame.setSize(Dimension%20panel.getPreferredSize()):void"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/frame.setVisible(boolean%20true):void" source="//Main.main(String%5B%5D,WindowEvent):void/panel.getPreferredSize():Dimension"/>
    <edge xmi:type="uml:ControlFlow" target="//Main.main(String%5B%5D,WindowEvent):void/final-Main.main(String%5B%5D,WindowEvent):void" source="//Main.main(String%5B%5D,WindowEvent):void/frame.setVisible(boolean%20true):void"/>
    <node xmi:type="uml:InitialNode" name="init-Main.main(String[],WindowEvent):void" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.0"/>
    <node xmi:type="uml:OpaqueAction" name="configurationList.put(String &quot;create_subactivities&quot;,String &quot;1&quot;):String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.0" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.1"/>
    <node xmi:type="uml:OpaqueAction" name="configurationList.put(String &quot;show_flot_variables&quot;,String &quot;1&quot;):String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.1" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.2"/>
    <node xmi:type="uml:OpaqueAction" name="setEnviromenTestMac():void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.2" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.43"/>
    <node xmi:type="uml:StructuredActivityNode" name="Main.setEnviromenTestMac():void"/>
    <node xmi:type="uml:OpaqueAction" name="initDiagram():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.43" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.44"/>
    <node xmi:type="uml:StructuredActivityNode" name="Main.initDiagram():String">
      <node xmi:type="uml:InitialNode" name="init-Main.initDiagram():String" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.26"/>
      <node xmi:type="uml:OpaqueAction" name="adParser.parseActivityDiagram():ActivityDiagramAst" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.26" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.27"/>
      <node xmi:type="uml:OpaqueAction" name="setResponseInstructions(String activityDiagram.getResponseInstructions()):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.27" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.30"/>
      <node xmi:type="uml:OpaqueAction" name="activityDiagram.getResponseInstructions():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.30" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.31"/>
      <node xmi:type="uml:DecisionNode" name="activityDiagram.isEntryValidated()" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.31" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.32 //Main.main(String%5B%5D,WindowEvent):void/@edge.40"/>
      <node xmi:type="uml:OpaqueAction" name="activityDiagram.isEntryValidated():boolean" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.32" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.33"/>
      <node xmi:type="uml:OpaqueAction" name="setResponseInstructions(String getResponseInstructions() + activityDiagramModel.getResultModel()):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.33"/>
      <node xmi:type="uml:OpaqueAction" name="getResponseInstructions():String" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.34"/>
      <node xmi:type="uml:OpaqueAction" name="activityDiagramModel.getResultModel():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.34" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.35"/>
      <node xmi:type="uml:OpaqueAction" name="activityDiagramModel.getFileModelPathSave():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.35" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.36"/>
      <node xmi:type="uml:OpaqueAction" name="setResponseInstructions(String getResponseInstructions() + Ptrans.getResultTransformation()):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.36"/>
      <node xmi:type="uml:OpaqueAction" name="getResponseInstructions():String"/>
      <node xmi:type="uml:OpaqueAction" name="Ptrans.getResultTransformation():String" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.37"/>
      <node xmi:type="uml:OpaqueAction" name="Ptrans.getResultTransformation():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.37"/>
      <node xmi:type="uml:OpaqueAction" name="activityDiagram.getResponseValidate():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.40" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.41"/>
      <node xmi:type="uml:MergeNode" name="mergeNode (activityDiagram.isEntryValidated())" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.41" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.42"/>
      <node xmi:type="uml:ActivityFinalNode" name="final-Main.initDiagram():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.42"/>
    </node>
    <node xmi:type="uml:StructuredActivityNode" name="ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst">
      <node xmi:type="uml:InitialNode" name="init-ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.3"/>
      <node xmi:type="uml:OpaqueAction" name="getCompilationUnitByDir():CompilationUnit" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.3" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.7"/>
      <node xmi:type="uml:OpaqueAction" name="getClassList(CompilationUnit parse):List&lt;TypeDeclaration>" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.7" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.8"/>
      <node xmi:type="uml:OpaqueAction" name="getListInvocationMethods(CompilationUnit parse):HashMap&lt;String,ADMethodInvocation>" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.8" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.9"/>
      <node xmi:type="uml:OpaqueAction" name="getHashConditions(CompilationUnit parse):Map&lt;String,Map&lt;Integer,ADCondition>>" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.9" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.24"/>
      <node xmi:type="uml:OpaqueAction" name="activityDiagram.testClassDiagram():void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.24" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.25"/>
      <node xmi:type="uml:ActivityFinalNode" name="final-ActivityDiagramParser.parseActivityDiagram():ActivityDiagramAst" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.25"/>
    </node>
    <node xmi:type="uml:StructuredActivityNode" name="ActivityDiagramParser.getClassList(CompilationUnit):List&lt;TypeDeclaration>">
      <node xmi:type="uml:InitialNode" name="init-ActivityDiagramParser.getClassList(CompilationUnit):List&lt;TypeDeclaration>" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.4"/>
      <node xmi:type="uml:OpaqueAction" name="parse.accept(TypeDeclarationVisitor visitor):" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.4" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.5"/>
      <node xmi:type="uml:OpaqueAction" name="visitor.getListTypeDeclaration():List&lt;TypeDeclaration>" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.5" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.6"/>
      <node xmi:type="uml:ActivityFinalNode" name="final-ActivityDiagramParser.getClassList(CompilationUnit):List&lt;TypeDeclaration>" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.6"/>
    </node>
    <node xmi:type="uml:StructuredActivityNode" name="TypeDeclarationVisitor.getListTypeDeclaration():List&lt;TypeDeclaration>"/>
    <node xmi:type="uml:StructuredActivityNode" name="ActivityDiagramAst.testClassDiagram():void">
      <node xmi:type="uml:InitialNode" name="init-ActivityDiagramAst.testClassDiagram():void" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.18"/>
      <node xmi:type="uml:OpaqueAction" name="validateClassDiagram():boolean" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.18" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.19"/>
      <node xmi:type="uml:DecisionNode" name="entryValidated" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.19" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.20 //Main.main(String%5B%5D,WindowEvent):void/@edge.22"/>
      <node xmi:type="uml:OpaqueAction" name="printToHashInstructions():void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.20" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.21"/>
      <node xmi:type="uml:MergeNode" name="mergeNode (entryValidated)" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.21 //Main.main(String%5B%5D,WindowEvent):void/@edge.22" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.23"/>
      <node xmi:type="uml:ActivityFinalNode" name="final-ActivityDiagramAst.testClassDiagram():void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.23"/>
    </node>
    <node xmi:type="uml:StructuredActivityNode" name="ActivityDiagramAst.validateClassDiagram():boolean">
      <node xmi:type="uml:InitialNode" name="init-ActivityDiagramAst.validateClassDiagram():boolean" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.10"/>
      <node xmi:type="uml:DecisionNode" name="entryValidated" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.10" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.11 //Main.main(String%5B%5D,WindowEvent):void/@edge.13"/>
      <node xmi:type="uml:OpaqueAction" name="System.out.println(String &quot;Activity Diagram Validated&quot;):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.11" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.12"/>
      <node xmi:type="uml:OpaqueAction" name="responseValidate.append(String &quot;Activity Diagram Validated&quot; + &quot;\n&quot;):StringBuilder" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.12" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.15"/>
      <node xmi:type="uml:OpaqueAction" name="System.out.println(String &quot;Sorry, Entry point (&quot; + entryClass + &quot;:&quot;+ entryMethod+ &quot;()&quot;+ &quot;)  not found!&quot;):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.13" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.14"/>
      <node xmi:type="uml:OpaqueAction" name="responseValidate.append(String &quot;Sorry, Entry point (&quot; + entryClass + &quot;:&quot;+ entryMethod+ &quot;()&quot;+ &quot;)  not found!&quot;):StringBuilder" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.14" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.16"/>
      <node xmi:type="uml:MergeNode" name="mergeNode (entryValidated)" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.15 //Main.main(String%5B%5D,WindowEvent):void/@edge.16" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.17"/>
      <node xmi:type="uml:ActivityFinalNode" name="final-ActivityDiagramAst.validateClassDiagram():boolean" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.17"/>
    </node>
    <node xmi:type="uml:StructuredActivityNode" name="Main.setResponseInstructions(String):void"/>
    <node xmi:type="uml:StructuredActivityNode" name="ActivityDiagramAst.getResponseInstructions():String">
      <node xmi:type="uml:InitialNode" name="init-ActivityDiagramAst.getResponseInstructions():String" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.28"/>
      <node xmi:type="uml:OpaqueAction" name="this.responseInstructions.toString():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.28" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.29"/>
      <node xmi:type="uml:ActivityFinalNode" name="final-ActivityDiagramAst.getResponseInstructions():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.29"/>
    </node>
    <node xmi:type="uml:StructuredActivityNode" name="ActivityDiagramAst.isEntryValidated():boolean"/>
    <node xmi:type="uml:StructuredActivityNode" name="Main.getResponseInstructions():String"/>
    <node xmi:type="uml:StructuredActivityNode" name="ActivityDiagramModel.getResultModel():String"/>
    <node xmi:type="uml:StructuredActivityNode" name="ActivityDiagramModel.getFileModelPathSave():String"/>
    <node xmi:type="uml:StructuredActivityNode" name="PapyrusTransformation.getResultTransformation():String"/>
    <node xmi:type="uml:StructuredActivityNode" name="ActivityDiagramAst.getResponseValidate():String">
      <node xmi:type="uml:InitialNode" name="init-ActivityDiagramAst.getResponseValidate():String" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.38"/>
      <node xmi:type="uml:OpaqueAction" name="responseValidate.toString():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.38" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.39"/>
      <node xmi:type="uml:ActivityFinalNode" name="final-ActivityDiagramAst.getResponseValidate():String" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.39"/>
    </node>
    <node xmi:type="uml:OpaqueAction" name="System.exit(int 0):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.44" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.45"/>
    <node xmi:type="uml:OpaqueAction" name="frame.addWindowListener( new WindowAdapter(){&#xA;  public void windowClosing(  WindowEvent e){&#xA;    System.exit(0);&#xA;  }&#xA;}&#xA;):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.45" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.46"/>
    <node xmi:type="uml:OpaqueAction" name="System.exit(int 0):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.46" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.47"/>
    <node xmi:type="uml:OpaqueAction" name="frame.getContentPane():Container" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.47" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.48"/>
    <node xmi:type="uml:OpaqueAction" name="frame.setSize(Dimension panel.getPreferredSize()):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.48" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.49"/>
    <node xmi:type="uml:OpaqueAction" name="panel.getPreferredSize():Dimension" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.49" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.50"/>
    <node xmi:type="uml:StructuredActivityNode" name="Menu.getPreferredSize():Dimension"/>
    <node xmi:type="uml:OpaqueAction" name="frame.setVisible(boolean true):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.50" outgoing="//Main.main(String%5B%5D,WindowEvent):void/@edge.51"/>
    <node xmi:type="uml:ActivityFinalNode" name="final-Main.main(String[],WindowEvent):void" incoming="//Main.main(String%5B%5D,WindowEvent):void/@edge.51"/>
  </packagedElement>
</uml:Model>
